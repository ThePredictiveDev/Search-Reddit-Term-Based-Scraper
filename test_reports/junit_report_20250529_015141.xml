<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="2" failures="2" skipped="0" tests="7" time="9.045" timestamp="2025-05-29T01:51:42.089443+05:30" hostname="DESKTOP-P3MSMOS"><testcase classname="tests.test_analytics.TestMetricsAnalyzer" name="test_analyzer_initialization" time="0.001"><error message="failed on setup with &quot;TypeError: MetricsAnalyzer.__init__() missing 1 required positional argument: 'db_manager'&quot;">self = &lt;tests.test_analytics.TestMetricsAnalyzer object at 0x000001610392AC00&gt;

    @pytest.fixture
    def analyzer(self):
        """Create metrics analyzer instance."""
&gt;       return MetricsAnalyzer()
E       TypeError: MetricsAnalyzer.__init__() missing 1 required positional argument: 'db_manager'

tests\test_analytics.py:28: TypeError</error></testcase><testcase classname="tests.test_analytics.TestMetricsAnalyzer" name="test_calculate_basic_metrics" time="0.000"><error message="failed on setup with &quot;TypeError: MetricsAnalyzer.__init__() missing 1 required positional argument: 'db_manager'&quot;">self = &lt;tests.test_analytics.TestMetricsAnalyzer object at 0x0000016103A73770&gt;

    @pytest.fixture
    def analyzer(self):
        """Create metrics analyzer instance."""
&gt;       return MetricsAnalyzer()
E       TypeError: MetricsAnalyzer.__init__() missing 1 required positional argument: 'db_manager'

tests\test_analytics.py:28: TypeError</error></testcase><testcase classname="tests.test_analytics.TestMetricsAnalyzer" name="test_analyze_session_metrics" time="0.033" /><testcase classname="tests.test_database" name="test_database_initialization" time="0.006"><failure message="AssertionError: assert False&#10; +  where False = hasattr(&lt;database.models.DatabaseManager object at 0x0000016108C7F7A0&gt;, 'Session')">db_manager = &lt;database.models.DatabaseManager object at 0x0000016108C7F7A0&gt;

    @pytest.mark.smoke
    @pytest.mark.unit
    def test_database_initialization(db_manager):
        """Test database initialization."""
        assert db_manager is not None
        assert hasattr(db_manager, 'engine')
&gt;       assert hasattr(db_manager, 'Session')
E       AssertionError: assert False
E        +  where False = hasattr(&lt;database.models.DatabaseManager object at 0x0000016108C7F7A0&gt;, 'Session')

tests\test_database.py:19: AssertionError</failure></testcase><testcase classname="tests.test_database" name="test_create_search_session" time="0.013"><failure message="assert False&#10; +  where False = isinstance(1, str)">db_manager = &lt;database.models.DatabaseManager object at 0x0000016108C7D1C0&gt;

    @pytest.mark.smoke
    @pytest.mark.unit
    def test_create_search_session(db_manager):
        """Test creating a search session."""
        session_id = db_manager.create_search_session("OpenAI")
    
        assert session_id is not None
&gt;       assert isinstance(session_id, str)
E       assert False
E        +  where False = isinstance(1, str)

tests\test_database.py:29: AssertionError</failure></testcase><testcase classname="tests.test_scraper.TestRedditScraper" name="test_scraper_initialization" time="0.032" /><testcase classname="tests.test_scraper.TestRedditScraper" name="test_sanitize_search_term" time="0.028" /></testsuite></testsuites>