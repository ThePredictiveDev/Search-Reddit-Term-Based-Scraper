<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="12" failures="0" skipped="0" tests="12" time="13.895" timestamp="2025-05-29T02:07:34.827512+05:30" hostname="DESKTOP-P3MSMOS"><testcase classname="tests.test_integration.TestSystemIntegration" name="test_complete_workflow" time="0.059"><error message="failed on setup with &quot;TypeError: MetricsAnalyzer.__init__() missing 1 required positional argument: 'db_manager'&quot;">self = &lt;tests.test_integration.TestSystemIntegration object at 0x0000022E221FE300&gt;
temp_database = 'C:\\Users\\Devansh\\AppData\\Local\\Temp\\tmpn49lo3gy\\test.db'

    @pytest.fixture
    def integrated_system(self, temp_database):
        """Create integrated system for testing."""
        # Initialize all components
        db_manager = DatabaseManager(f"sqlite:///{temp_database}")
        db_manager.create_tables()
    
        scraper = RedditScraper(db_manager)
&gt;       metrics_analyzer = MetricsAnalyzer()
E       TypeError: MetricsAnalyzer.__init__() missing 1 required positional argument: 'db_manager'

tests\test_integration.py:30: TypeError</error><error message="failed on teardown with &quot;PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\Users\\Devansh\\AppData\\Local\\Temp\\tmpn49lo3gy\\test.db'&quot;">@pytest.fixture
    def temp_database():
        """Temporary database for testing."""
        temp_dir = tempfile.mkdtemp()
        db_path = Path(temp_dir) / "test.db"
    
        yield str(db_path)
    
        # Cleanup
&gt;       shutil.rmtree(temp_dir)

tests\conftest.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\Program Files\Python312\Lib\shutil.py:808: in rmtree
    return _rmtree_unsafe(path, onexc)
C:\Program Files\Python312\Lib\shutil.py:636: in _rmtree_unsafe
    onexc(os.unlink, fullname, err)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

path = 'C:\\Users\\Devansh\\AppData\\Local\\Temp\\tmpn49lo3gy'
onexc = &lt;function rmtree.&lt;locals&gt;.onexc at 0x0000022E231122A0&gt;

    def _rmtree_unsafe(path, onexc):
        try:
            with os.scandir(path) as scandir_it:
                entries = list(scandir_it)
        except OSError as err:
            onexc(os.scandir, path, err)
            entries = []
        for entry in entries:
            fullname = entry.path
            try:
                is_dir = entry.is_dir(follow_symlinks=False)
            except OSError:
                is_dir = False
    
            if is_dir and not entry.is_junction():
                try:
                    if entry.is_symlink():
                        # This can only happen if someone replaces
                        # a directory with a symlink after the call to
                        # os.scandir or entry.is_dir above.
                        raise OSError("Cannot call rmtree on a symbolic link")
                except OSError as err:
                    onexc(os.path.islink, fullname, err)
                    continue
                _rmtree_unsafe(fullname, onexc)
            else:
                try:
&gt;                   os.unlink(fullname)
E                   PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\Users\\Devansh\\AppData\\Local\\Temp\\tmpn49lo3gy\\test.db'

C:\Program Files\Python312\Lib\shutil.py:634: PermissionError</error></testcase><testcase classname="tests.test_integration.TestSystemIntegration" name="test_async_workflow" time="0.039"><error message="failed on setup with &quot;TypeError: MetricsAnalyzer.__init__() missing 1 required positional argument: 'db_manager'&quot;">self = &lt;tests.test_integration.TestSystemIntegration object at 0x0000022E223C5040&gt;
temp_database = 'C:\\Users\\Devansh\\AppData\\Local\\Temp\\tmpq02ui6u5\\test.db'

    @pytest.fixture
    def integrated_system(self, temp_database):
        """Create integrated system for testing."""
        # Initialize all components
        db_manager = DatabaseManager(f"sqlite:///{temp_database}")
        db_manager.create_tables()
    
        scraper = RedditScraper(db_manager)
&gt;       metrics_analyzer = MetricsAnalyzer()
E       TypeError: MetricsAnalyzer.__init__() missing 1 required positional argument: 'db_manager'

tests\test_integration.py:30: TypeError</error><error message="failed on teardown with &quot;PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\Users\\Devansh\\AppData\\Local\\Temp\\tmpq02ui6u5\\test.db'&quot;">@pytest.fixture
    def temp_database():
        """Temporary database for testing."""
        temp_dir = tempfile.mkdtemp()
        db_path = Path(temp_dir) / "test.db"
    
        yield str(db_path)
    
        # Cleanup
&gt;       shutil.rmtree(temp_dir)

tests\conftest.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\Program Files\Python312\Lib\shutil.py:808: in rmtree
    return _rmtree_unsafe(path, onexc)
C:\Program Files\Python312\Lib\shutil.py:636: in _rmtree_unsafe
    onexc(os.unlink, fullname, err)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

path = 'C:\\Users\\Devansh\\AppData\\Local\\Temp\\tmpq02ui6u5'
onexc = &lt;function rmtree.&lt;locals&gt;.onexc at 0x0000022E23AE3EC0&gt;

    def _rmtree_unsafe(path, onexc):
        try:
            with os.scandir(path) as scandir_it:
                entries = list(scandir_it)
        except OSError as err:
            onexc(os.scandir, path, err)
            entries = []
        for entry in entries:
            fullname = entry.path
            try:
                is_dir = entry.is_dir(follow_symlinks=False)
            except OSError:
                is_dir = False
    
            if is_dir and not entry.is_junction():
                try:
                    if entry.is_symlink():
                        # This can only happen if someone replaces
                        # a directory with a symlink after the call to
                        # os.scandir or entry.is_dir above.
                        raise OSError("Cannot call rmtree on a symbolic link")
                except OSError as err:
                    onexc(os.path.islink, fullname, err)
                    continue
                _rmtree_unsafe(fullname, onexc)
            else:
                try:
&gt;                   os.unlink(fullname)
E                   PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\Users\\Devansh\\AppData\\Local\\Temp\\tmpq02ui6u5\\test.db'

C:\Program Files\Python312\Lib\shutil.py:634: PermissionError</error></testcase><testcase classname="tests.test_integration.TestSystemIntegration" name="test_error_propagation" time="0.037"><error message="failed on setup with &quot;TypeError: MetricsAnalyzer.__init__() missing 1 required positional argument: 'db_manager'&quot;">self = &lt;tests.test_integration.TestSystemIntegration object at 0x0000022E223C5250&gt;
temp_database = 'C:\\Users\\Devansh\\AppData\\Local\\Temp\\tmp5pghafcg\\test.db'

    @pytest.fixture
    def integrated_system(self, temp_database):
        """Create integrated system for testing."""
        # Initialize all components
        db_manager = DatabaseManager(f"sqlite:///{temp_database}")
        db_manager.create_tables()
    
        scraper = RedditScraper(db_manager)
&gt;       metrics_analyzer = MetricsAnalyzer()
E       TypeError: MetricsAnalyzer.__init__() missing 1 required positional argument: 'db_manager'

tests\test_integration.py:30: TypeError</error><error message="failed on teardown with &quot;PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\Users\\Devansh\\AppData\\Local\\Temp\\tmp5pghafcg\\test.db'&quot;">@pytest.fixture
    def temp_database():
        """Temporary database for testing."""
        temp_dir = tempfile.mkdtemp()
        db_path = Path(temp_dir) / "test.db"
    
        yield str(db_path)
    
        # Cleanup
&gt;       shutil.rmtree(temp_dir)

tests\conftest.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\Program Files\Python312\Lib\shutil.py:808: in rmtree
    return _rmtree_unsafe(path, onexc)
C:\Program Files\Python312\Lib\shutil.py:636: in _rmtree_unsafe
    onexc(os.unlink, fullname, err)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

path = 'C:\\Users\\Devansh\\AppData\\Local\\Temp\\tmp5pghafcg'
onexc = &lt;function rmtree.&lt;locals&gt;.onexc at 0x0000022E244E94E0&gt;

    def _rmtree_unsafe(path, onexc):
        try:
            with os.scandir(path) as scandir_it:
                entries = list(scandir_it)
        except OSError as err:
            onexc(os.scandir, path, err)
            entries = []
        for entry in entries:
            fullname = entry.path
            try:
                is_dir = entry.is_dir(follow_symlinks=False)
            except OSError:
                is_dir = False
    
            if is_dir and not entry.is_junction():
                try:
                    if entry.is_symlink():
                        # This can only happen if someone replaces
                        # a directory with a symlink after the call to
                        # os.scandir or entry.is_dir above.
                        raise OSError("Cannot call rmtree on a symbolic link")
                except OSError as err:
                    onexc(os.path.islink, fullname, err)
                    continue
                _rmtree_unsafe(fullname, onexc)
            else:
                try:
&gt;                   os.unlink(fullname)
E                   PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\Users\\Devansh\\AppData\\Local\\Temp\\tmp5pghafcg\\test.db'

C:\Program Files\Python312\Lib\shutil.py:634: PermissionError</error></testcase><testcase classname="tests.test_integration.TestSystemIntegration" name="test_data_consistency" time="0.041"><error message="failed on setup with &quot;TypeError: MetricsAnalyzer.__init__() missing 1 required positional argument: 'db_manager'&quot;">self = &lt;tests.test_integration.TestSystemIntegration object at 0x0000022E223C52B0&gt;
temp_database = 'C:\\Users\\Devansh\\AppData\\Local\\Temp\\tmp94nlo9b8\\test.db'

    @pytest.fixture
    def integrated_system(self, temp_database):
        """Create integrated system for testing."""
        # Initialize all components
        db_manager = DatabaseManager(f"sqlite:///{temp_database}")
        db_manager.create_tables()
    
        scraper = RedditScraper(db_manager)
&gt;       metrics_analyzer = MetricsAnalyzer()
E       TypeError: MetricsAnalyzer.__init__() missing 1 required positional argument: 'db_manager'

tests\test_integration.py:30: TypeError</error><error message="failed on teardown with &quot;PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\Users\\Devansh\\AppData\\Local\\Temp\\tmp94nlo9b8\\test.db'&quot;">@pytest.fixture
    def temp_database():
        """Temporary database for testing."""
        temp_dir = tempfile.mkdtemp()
        db_path = Path(temp_dir) / "test.db"
    
        yield str(db_path)
    
        # Cleanup
&gt;       shutil.rmtree(temp_dir)

tests\conftest.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\Program Files\Python312\Lib\shutil.py:808: in rmtree
    return _rmtree_unsafe(path, onexc)
C:\Program Files\Python312\Lib\shutil.py:636: in _rmtree_unsafe
    onexc(os.unlink, fullname, err)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

path = 'C:\\Users\\Devansh\\AppData\\Local\\Temp\\tmp94nlo9b8'
onexc = &lt;function rmtree.&lt;locals&gt;.onexc at 0x0000022E24DE25C0&gt;

    def _rmtree_unsafe(path, onexc):
        try:
            with os.scandir(path) as scandir_it:
                entries = list(scandir_it)
        except OSError as err:
            onexc(os.scandir, path, err)
            entries = []
        for entry in entries:
            fullname = entry.path
            try:
                is_dir = entry.is_dir(follow_symlinks=False)
            except OSError:
                is_dir = False
    
            if is_dir and not entry.is_junction():
                try:
                    if entry.is_symlink():
                        # This can only happen if someone replaces
                        # a directory with a symlink after the call to
                        # os.scandir or entry.is_dir above.
                        raise OSError("Cannot call rmtree on a symbolic link")
                except OSError as err:
                    onexc(os.path.islink, fullname, err)
                    continue
                _rmtree_unsafe(fullname, onexc)
            else:
                try:
&gt;                   os.unlink(fullname)
E                   PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\Users\\Devansh\\AppData\\Local\\Temp\\tmp94nlo9b8\\test.db'

C:\Program Files\Python312\Lib\shutil.py:634: PermissionError</error></testcase><testcase classname="tests.test_integration.TestSystemIntegration" name="test_concurrent_access" time="0.037"><error message="failed on setup with &quot;TypeError: MetricsAnalyzer.__init__() missing 1 required positional argument: 'db_manager'&quot;">self = &lt;tests.test_integration.TestSystemIntegration object at 0x0000022E223C5460&gt;
temp_database = 'C:\\Users\\Devansh\\AppData\\Local\\Temp\\tmplhd_h10s\\test.db'

    @pytest.fixture
    def integrated_system(self, temp_database):
        """Create integrated system for testing."""
        # Initialize all components
        db_manager = DatabaseManager(f"sqlite:///{temp_database}")
        db_manager.create_tables()
    
        scraper = RedditScraper(db_manager)
&gt;       metrics_analyzer = MetricsAnalyzer()
E       TypeError: MetricsAnalyzer.__init__() missing 1 required positional argument: 'db_manager'

tests\test_integration.py:30: TypeError</error><error message="failed on teardown with &quot;PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\Users\\Devansh\\AppData\\Local\\Temp\\tmplhd_h10s\\test.db'&quot;">@pytest.fixture
    def temp_database():
        """Temporary database for testing."""
        temp_dir = tempfile.mkdtemp()
        db_path = Path(temp_dir) / "test.db"
    
        yield str(db_path)
    
        # Cleanup
&gt;       shutil.rmtree(temp_dir)

tests\conftest.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\Program Files\Python312\Lib\shutil.py:808: in rmtree
    return _rmtree_unsafe(path, onexc)
C:\Program Files\Python312\Lib\shutil.py:636: in _rmtree_unsafe
    onexc(os.unlink, fullname, err)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

path = 'C:\\Users\\Devansh\\AppData\\Local\\Temp\\tmplhd_h10s'
onexc = &lt;function rmtree.&lt;locals&gt;.onexc at 0x0000022E241DBCE0&gt;

    def _rmtree_unsafe(path, onexc):
        try:
            with os.scandir(path) as scandir_it:
                entries = list(scandir_it)
        except OSError as err:
            onexc(os.scandir, path, err)
            entries = []
        for entry in entries:
            fullname = entry.path
            try:
                is_dir = entry.is_dir(follow_symlinks=False)
            except OSError:
                is_dir = False
    
            if is_dir and not entry.is_junction():
                try:
                    if entry.is_symlink():
                        # This can only happen if someone replaces
                        # a directory with a symlink after the call to
                        # os.scandir or entry.is_dir above.
                        raise OSError("Cannot call rmtree on a symbolic link")
                except OSError as err:
                    onexc(os.path.islink, fullname, err)
                    continue
                _rmtree_unsafe(fullname, onexc)
            else:
                try:
&gt;                   os.unlink(fullname)
E                   PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\Users\\Devansh\\AppData\\Local\\Temp\\tmplhd_h10s\\test.db'

C:\Program Files\Python312\Lib\shutil.py:634: PermissionError</error></testcase><testcase classname="tests.test_integration.TestSystemIntegration" name="test_performance_integration" time="0.038"><error message="failed on setup with &quot;TypeError: MetricsAnalyzer.__init__() missing 1 required positional argument: 'db_manager'&quot;">self = &lt;tests.test_integration.TestSystemIntegration object at 0x0000022E223C5610&gt;
temp_database = 'C:\\Users\\Devansh\\AppData\\Local\\Temp\\tmpe7r6o5o9\\test.db'

    @pytest.fixture
    def integrated_system(self, temp_database):
        """Create integrated system for testing."""
        # Initialize all components
        db_manager = DatabaseManager(f"sqlite:///{temp_database}")
        db_manager.create_tables()
    
        scraper = RedditScraper(db_manager)
&gt;       metrics_analyzer = MetricsAnalyzer()
E       TypeError: MetricsAnalyzer.__init__() missing 1 required positional argument: 'db_manager'

tests\test_integration.py:30: TypeError</error><error message="failed on teardown with &quot;PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\Users\\Devansh\\AppData\\Local\\Temp\\tmpe7r6o5o9\\test.db'&quot;">@pytest.fixture
    def temp_database():
        """Temporary database for testing."""
        temp_dir = tempfile.mkdtemp()
        db_path = Path(temp_dir) / "test.db"
    
        yield str(db_path)
    
        # Cleanup
&gt;       shutil.rmtree(temp_dir)

tests\conftest.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\Program Files\Python312\Lib\shutil.py:808: in rmtree
    return _rmtree_unsafe(path, onexc)
C:\Program Files\Python312\Lib\shutil.py:636: in _rmtree_unsafe
    onexc(os.unlink, fullname, err)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

path = 'C:\\Users\\Devansh\\AppData\\Local\\Temp\\tmpe7r6o5o9'
onexc = &lt;function rmtree.&lt;locals&gt;.onexc at 0x0000022E2319C2C0&gt;

    def _rmtree_unsafe(path, onexc):
        try:
            with os.scandir(path) as scandir_it:
                entries = list(scandir_it)
        except OSError as err:
            onexc(os.scandir, path, err)
            entries = []
        for entry in entries:
            fullname = entry.path
            try:
                is_dir = entry.is_dir(follow_symlinks=False)
            except OSError:
                is_dir = False
    
            if is_dir and not entry.is_junction():
                try:
                    if entry.is_symlink():
                        # This can only happen if someone replaces
                        # a directory with a symlink after the call to
                        # os.scandir or entry.is_dir above.
                        raise OSError("Cannot call rmtree on a symbolic link")
                except OSError as err:
                    onexc(os.path.islink, fullname, err)
                    continue
                _rmtree_unsafe(fullname, onexc)
            else:
                try:
&gt;                   os.unlink(fullname)
E                   PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\Users\\Devansh\\AppData\\Local\\Temp\\tmpe7r6o5o9\\test.db'

C:\Program Files\Python312\Lib\shutil.py:634: PermissionError</error></testcase></testsuite></testsuites>